<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- 파라미터의 타입을 생략하면, 자동으로 문자열을 원시 타입으로 변환해준다.
        단 원시 타입이 아닌 경우, 별도의 변환 어댑터를 작성하여 등록해야 한다. -->
  
   <!-- Car(String,int) 호출함 -->
   <bean id="car1" class="step02.Car">
      <constructor-arg><value>티코</value></constructor-arg>
      <constructor-arg><value>5</value></constructor-arg>
   </bean> 
   
   <!-- Car(int,String) 호출함 -->
   <bean id="car2" class="step02.Car">
      <constructor-arg><value>5</value></constructor-arg>
      <constructor-arg><value>아반테</value></constructor-arg>
   </bean> 
   
   <!-- <value> 태그 대신 value 속성 사용하기 -->
   <bean id="car3" class="step02.Car">
      <constructor-arg value="소나타" type="java.lang.String"/>
      <constructor-arg value="5" type="int"/>
   </bean>
   
   <!-- 파라미터의 순서에 상관없이 파라미터 개수와 타입이 일치하는 생성자를 찾으면,
        그 생성자를 호출한다. 따라서 다음은 Car(String,int)를 호출한다. -->
   <bean id="car4" class="step02.Car">
      <constructor-arg value="5" type="int"/>
      <constructor-arg value="제네시스" type="java.lang.String"/>
   </bean>
   
   <!-- 물론, index 속성을 사용하여 순서를 정확하게 지정할 수 있다. 
        다음은 Car(int, String) 호출한다.-->
   <bean id="car5" class="step02.Car">
      <constructor-arg value="5" type="int" index="0"/>
      <constructor-arg value="그랜저" type="java.lang.String" index="1"/>
   </bean>
   
   <!-- 차라리 파라미터 타입을 지정하지 않는 것이 좋다.
        스프링 빈 컨테이너는 호출할 생성자를 정확하게 선택한다. -->
   <bean id="car6" class="step02.Car">
      <constructor-arg value="5"/>
      <constructor-arg value="에쿠스"/>
   </bean>
   <bean id="car7" class="step02.Car">
      <constructor-arg value="에쿠스2"/>
      <constructor-arg value="5"/>
   </bean>     
</beans>









